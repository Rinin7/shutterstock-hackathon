/**
 * Shutterstock API Reference
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * OpenAPI spec version: 1.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Price', 'model/SubscriptionMetadata'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Price'), require('./SubscriptionMetadata'));
  } else {
    // Browser globals (root is window)
    if (!root.ShutterstockApiReference) {
      root.ShutterstockApiReference = {};
    }
    root.ShutterstockApiReference.LicenseAgreement = factory(root.ShutterstockApiReference.ApiClient, root.ShutterstockApiReference.Price, root.ShutterstockApiReference.SubscriptionMetadata);
  }
}(this, function(ApiClient, Price, SubscriptionMetadata) {
  'use strict';




  /**
   * The LicenseAgreement model module.
   * @module model/LicenseAgreement
   * @version 1.0.5
   */

  /**
   * Constructs a new <code>LicenseAgreement</code>.
   * Metadata about a license agreement
   * @alias module:model/LicenseAgreement
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>LicenseAgreement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LicenseAgreement} obj Optional instance to populate.
   * @return {module:model/LicenseAgreement} The populated <code>LicenseAgreement</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('license')) {
        obj['license'] = ApiClient.convertToType(data['license'], 'String');
      }
      if (data.hasOwnProperty('media_type')) {
        obj['media_type'] = ApiClient.convertToType(data['media_type'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = SubscriptionMetadata.constructFromObject(data['metadata']);
      }
      if (data.hasOwnProperty('price_per_download')) {
        obj['price_per_download'] = Price.constructFromObject(data['price_per_download']);
      }
    }
    return obj;
  }

  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} license
   */
  exports.prototype['license'] = undefined;
  /**
   * Type of media, such as image or video
   * @member {String} media_type
   */
  exports.prototype['media_type'] = undefined;
  /**
   * @member {module:model/SubscriptionMetadata} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * @member {module:model/Price} price_per_download
   */
  exports.prototype['price_per_download'] = undefined;



  return exports;
}));


